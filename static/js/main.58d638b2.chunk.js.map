{"version":3,"sources":["icons/bitcoin-transfer.svg","icons/lock.svg","icons/unlock.svg","images/automatic_contribution.png","images/manual_contribution.png","images/payment.png","images/currency.png","images/signing.png","images/fee.png","images/return_address.png","images/transaction_log.png","images/transaction_state.png","images/publish_transaction.png","frames/starting_frame.jsx","util.js","frames/contribution_input_manual_frame.jsx","frames/contribution_automatic_input_frame.jsx","frames/contribution_input_frame.jsx","frames/contribution_list.jsx","frames/balance_segment.jsx","frames/contribution_frame.jsx","frames/payment_list.jsx","frames/payment_input_frame.jsx","frames/payment_frame.jsx","frames/error_frame.jsx","frames/address_dropdown.jsx","frames/fees_frame.jsx","frames/log_segments.jsx","frames/transaction_snapshot.jsx","frames/transaction_title_segment.jsx","frames/segment.jsx","frames/transaction_hash_segment.jsx","frames/transaction_frame.jsx","frames/signing_frame.jsx","frames/error_modal.jsx","frames/submission_modal.jsx","frames/help_modal.jsx","frames/center_frame.jsx","App.js","serviceWorker.js","index.js","style/colors.js"],"names":["module","exports","__webpack_require__","p","StartingFrame","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","e","_ref","value","callback","state","react_default","a","createElement","style","flexGrow","display","flexDirection","justifyContent","alignItems","color","overflowY","marginTop","Button","margin","fontWeight","opacity","onClick","size","Component","OperationResult","success","error","Error","ValidationError","_Error","message","name","inherits","wrapNativeSuper","getCurrencyStepSize","currency","ContributionInputManualFrame","getInitialFormValues","prefill","Transaction Hash","Output Index","ScriptPubKey","Balance","validate","utils","isHexString","length","format","scripts","getScriptFormat","concat","validateSubmission","appendError","errorList","errorListCopy","slice","found","forEach","element","index","field","push","removeError","filter","handleChange","_newState","_this$validate","errorProperty","newState","defineProperty","setState","handleSubmit","_this$validateSubmiss","balance","convertCurrencyTo","transactionOutput","models","TransactionOutput","Number","toString","tx","Transaction","submissionResult","addTransactions","otherError","formValues","tutorial","objectSpread","Transaction Hash error","Output Index error","ScriptPubKey error","balance error","prevProps","contributions","transactionError","outputIndexError","scriptPubKeyError","balanceError","formError","Form","onSubmit","Message","header","content","overflowWrap","Group","Input","marginBottom","label","onChange","placeholder","width","type","min","step","stepSize","disabled","toLowerCase","AutomaticContributionInputFrame","addressType","getAddressFormat","toUpperCase","InvalidInputError","network","getAddressNetwork","expectedNetwork","services","pullUnspentTransactions","then","response","transaction","data","splitTransactions","_loop","outputs","transactions","keys","map","key","outputIndex","scriptPubKey","txHash","catch","status","errMessage","Bitcoin Address","Bitcoin Address error","addressError","ContributionInputFrame","Tab","menu","pointing","attached","defaultActiveIndex","panes","menuItem","render","Pane","contribution_automatic_input_frame","contribution_input_manual_frame","ContributionList","txhash","outputindex","convertbalance","renderSegments","contribution","contributionId","output","Segment","boxShadow","marginRight","basic","icon","overflowX","wordBreak","_this2","flexShrink","esm","handleHeight","height","borderStyle","borderRadius","borderWidth","borderColor","textAlign","options","text","BalanceSegment","_this$props","upward","formattedBalance","currencyUtil","Menu","position","className","Dropdown","item","ContributionFrame","appendToTransaction","txs","getContributions","contribution_input_frame","contribution_list","removeTransaction","balance_segment","setCurrency","PaymentList","address","amount","convertAmount","payments","payment","to","paddingRight","paymentInputFrame","Amount","Payment","result","Amount error","amountError","Card","Content","PaymentFrame","payment_input_frame","payment_list","removePayment","ErrorFrame","AddressDropdown","validateAddress","validation","setReturnAddress","errorMessage","triggerAnimation","handleSearchChange","_ref2","searchQuery","stateOptions","addresses","returnAddress","_this$state","Transition","animation","duration","visible","fluid","onSearchChange","search","selection","_this$state2","includes","stateOptionsCopy","currencyOptions","sizeOptions","FeesFrame","changeSizeUnit","sizeUnit","fee","calculateFeeState","totalFee","setReturnPayment","returnPayment","calculateDefaultAddressState","presetPayment","toConsumableArray","modTx","createSignedTransaction","privKeysArg","feeRate","Math","ceil","fees","getFeeRate","getSize","remainingBalance","newPayment","_ref3","totalFeeSatoshi","rateOptions","prevState","rawFee","formatSize","background","lime","backgroundImage","transferIcon","backgroundRepeat","backgroundPosition","fontSize","address_dropdown","padding","lightLime","labelPosition","negative","GenericLog","log","showResult","action","object","hasSubaction","subaction","hasResult","singleLog","TranactionSnapshot","handleHover","stopPropagation","arguments","undefined","Array","isArray","array","renderSubGroup","renderSegment","_this3","marginLeft","el","Header","sub","_this4","onMouseOver","onMouseLeave","snapshot","renderGroup","TransactionTitleSegment","handleHoverOver","hover","handleHoverExit","showSnapshot","transaction_snapshot","inverted","overflow","fontStyle","tertiary","as","split","word","charAt","join","renderSnapshot","ComplexSegmentGroup","createSection","dictkey","dict","sectionDict","getValue","isIterable","masterLog","singularTitle","substring","createSegmentGroup","title","logArray","finalLog","OrderedDict","getKeys","transactionDict","getArray","transaction_title_segment","createSegment","firstItem","tailItems","splice","createSubSegments","subIndex","secondary","items","i","backgroundColor","minWidth","borderBottom","flexBasis","logger","TxHashSegment","segmentedHash","joinArray","TxBreakdown","transaction_hash_segment","segment","SigningForm","handleMouseEnter","unlocked","darkPink","handleMouseExit","lightPink","validatePriv","formValue","removeKey","priv","keyFormat","getPrivateKeyFormat","renderForm","float","borderTopLeftRadius","borderTopRightRadius","minHeight","onMouseEnter","src","unlockIcon","lockIcon","alt","SigningFrame","addPrivateKey","removePrivateKey","signing_frame_SigningForm","privKeys","ErrorModal","open","handleOpen","handleClose","Modal","onOpen","onClose","Description","SubmissionModal","reset","closeIcon","scrolling","lib","expandLevel","Actions","HelpModal","handlePaginationChange","activePage","totalPages","getPages","frame","page","Image","automaticContributionIMG","manualContributionIMG","currencyIMG","paymentIMG","signingIMG","returnAddressIMG","feeIMG","transactionLogIMG","transactionStateIMG","publishIMG","pages","Pagination","prevItem","Icon","nextItem","lastItem","onPageChange","startingFrameMeta","order","contributionFrameMeta","navLookup","CenterFrame","defaultState","handleOpenModal","modalOpen","handleCloseModal","showhelp","checkDuplicateTransactions","stateTxs","nestedLoops","j","txIndex","findIndex","paymentIndex","appendToPayments","calculateBalance","appendToPrivateKeys","getAddressesFromPrivs","addressesCopy","privToAddress","getAddressesFromPayments","getAllAddresses","validatePrivKeys","reduce","sum","getPrivKeyArgs","isValid","modTransaction","handleNavigation","direction","showModal","validationResult","directionValue","setTransactionMode","mode","alert","publish","publishResult","loading","pushtx","publishMessage","Dimmer","active","Loader","modal","navigationButtons","starting_frame","contribution_frame","payment_frame","signing_frame","fees_frame","transaction_frame","error_frame","nextNavButton","backNavButton","buttons","publishButton","error_modal","help_modal","submission_modal","App","center_frame","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","darkPurple","lightPurple","lighterPurple","red","gold","darkLime"],"mappings":"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","file":"static/js/main.58d638b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bitcoin-transfer.454eb946.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock.d74ea141.svg\";","module.exports = __webpack_public_path__ + \"static/media/unlock.7450572e.svg\";","module.exports = __webpack_public_path__ + \"static/media/automatic_contribution.1f7ca2cc.png\";","module.exports = __webpack_public_path__ + \"static/media/manual_contribution.229177e6.png\";","module.exports = __webpack_public_path__ + \"static/media/payment.9b1f2f1a.png\";","module.exports = __webpack_public_path__ + \"static/media/currency.7cd9c2a9.png\";","module.exports = __webpack_public_path__ + \"static/media/signing.a9782a6d.png\";","module.exports = __webpack_public_path__ + \"static/media/fee.62649767.png\";","module.exports = __webpack_public_path__ + \"static/media/return_address.d5385108.png\";","module.exports = __webpack_public_path__ + \"static/media/transaction_log.29199bf6.png\";","module.exports = __webpack_public_path__ + \"static/media/transaction_state.ac8b438b.png\";","module.exports = __webpack_public_path__ + \"static/media/publish_transaction.ab1658e8.png\";","import React, { Component } from 'react';\nimport { Button } from 'semantic-ui-react'\n\nclass StartingFrame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleClick = (e, { value }) => {\n    return this.props.callback(value);\n  }\n\n  render() {\n    return (\n      <div style={{flexGrow: '1', display: 'flex'}}>\n        <div style={{flexGrow: '1', display: 'flex', flexDirection:'column', justifyContent: 'center', alignItems:'center'}}>\n          <h1 style={{color: 'white'}}>\n            Welcome\n          </h1>\n          <p style={{color: 'white'}}>\n            Click one of the buttons on the right to begin.\n          </p>\n        </div>\n        <div style={{flexGrow: '1', display: 'flex', flexDirection:'column', overflowY:'auto', marginTop: '0.5rem'}}>\n          <Button style={{flexGrow:1, margin: '0.5rem', fontWeight:'bolder', opacity:0.9}} value='mainnet' onClick={this.handleClick} size='large' color='violet'>\n            Create Mainnet Transaction\n          </Button>\n          <Button style={{flexGrow:1, margin: '0.5rem', fontWeight:'bolder', opacity:0.9}} value='testnet' onClick={this.handleClick} size='large' color='violet'>\n            Create Testnet Transaction\n          </Button>\n          {/* <Button style={{flexGrow:1}} value='segwit' onClick={this.handleClick}>Create Segwit Transaction (under development)</Button> */}\n          <Button style={{flexGrow:1, margin: '0.5rem', fontWeight:'bolder', opacity:0.9}} value='tutorial' onClick={this.handleClick} size='large' color='violet'>\n            Tutorial\n          </Button>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default StartingFrame;\n","export class OperationResult {\n  constructor (success, error) {\n    this.success = success;\n    if (error) {\n      this.error = error;\n    } else if (!success) {\n      this.error = new Error('You\\'ve encountered an unexpected Error.');\n    }\n  }\n}\n\nexport class ValidationError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'ValidationError';\n    this.message = message;\n  }\n}\n\nexport function PascalCase(string) {\n  const wordArray = string.split(' ');\n  return wordArray.map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n}\n\nexport function getCurrencyStepSize(currency) {\n  switch(currency) {\n    case 'btc':\n      return 0.00000001;\n    case 'mbtc':\n      return 0.00001;\n    case 'satoshi':\n      return 1;\n    default:\n      return 1;\n  }\n}","import React, { Component } from 'react';\nimport { Form, Message } from 'semantic-ui-react'\nimport { models, currency, utils, scripts } from 'easy_btc';\nimport { OperationResult, ValidationError, getCurrencyStepSize } from '../util';\nclass ContributionInputManualFrame extends Component {\n  constructor (props) {\n    super(props);\n    const state = {\n      errorList: [],\n      'Transaction Hash error': false,\n      'Output Index error': false,\n      'ScriptPubKey error': false,\n      'balance error': false,\n      otherError: false,\n    };\n    const formValues = this.getInitialFormValues(this.props.tutorial);\n    this.state = {...state, ...formValues} \n  }\n\n  componentDidUpdate(prevProps) {\n    // If a contribution has been removed from the list\n    if (prevProps.contributions.length !== this.props.contributions.length) {\n      this.setState({otherError: false});\n    }\n  }\n\n  getInitialFormValues = (prefill) => {\n    if (prefill) {\n      return {\n        'Transaction Hash': '68e7da9216d4e113df7918383258f7cec0a5cf661f469f68966aadf6a12358d3',\n        'Output Index': '0',\n        'ScriptPubKey': '76a914328dbf4cbeacc2898f096ffce5f9dcd27b53e5cc88ac',\n        'Balance': '20000000',\n      };\n    }\n    return {\n      'Transaction Hash': '',\n      'Output Index': '',\n      'ScriptPubKey': '',\n      'Balance': '',\n    }\n  }\n\n  validate = (name, value) => {\n    switch (name) {\n      case 'Transaction Hash':\n        // TODO find transcaction length and acceptable characters (hex?)\n        if (utils.isHexString(value)) {\n          return new OperationResult(true);\n        }\n        return new OperationResult(false, new Error('The input string is not in hex format.'));\n      case 'Output Index':\n        return new OperationResult(true);\n      case 'ScriptPubKey':\n        try {\n          if (value.length) {\n            const format = scripts.getScriptFormat(value);\n            if (format !== 'pay-to-pubkey-hash') {\n              return new OperationResult(false, new Error(`Unsupported script format ${format}.`));\n            }\n          }\n          return new OperationResult(true);\n        } catch (error) {\n          // TODO add generic error\n          return new OperationResult(false, error);\n        }\n      case 'Balance':\n        return new OperationResult(true);\n      default:\n        return; // TODO should this throw an error?\n    }\n  }\n\n  validateSubmission = () => {\n    if (this.state['Transaction Hash error']\n           || this.state['Output Index error']\n           || this.state['ScriptPubKey error']\n           || this.state['balance error']\n           || !this.state['Transaction Hash']\n           || !this.state['Output Index']\n           || !this.state['ScriptPubKey']\n           || !this.state['Balance']) {\n      return new OperationResult(false, new ValidationError('Please ensure that all required fields are filled.'));\n    }\n    return new OperationResult(true);\n  }\n\n  appendError = (errorList, name, error) => {\n    // TODO Modularize this in an util\n    let errorListCopy = errorList.slice(0);\n    let found = false;\n    errorListCopy.forEach((element, index) => {\n      if (!found && element.field === name) {\n        errorListCopy[index].message = error.message;\n        found = true;\n      }\n    });\n    if (!found) {\n      errorListCopy.push({\n        field: name,\n        message: error.message,\n      });\n    }\n    return errorListCopy;\n  };\n\n  removeError = (errorList, name) => {\n    // TODO Modularize this in an util\n    return errorList.filter((element) => {\n      return element.field !== name;\n    });\n  }\n\n  handleChange = (e, { name, value }) => {\n    const { success, error } = this.validate(name, value);\n    const errorProperty = `${name} error`;\n    const errorList = success? this.removeError(this.state.errorList, name)\n                             : this.appendError(this.state.errorList, name, error);\n\n    const newState = {\n      [name]: value,\n      [errorProperty]: !success,\n      otherError: false,\n      errorList,\n    };\n    this.setState(newState);\n  }\n\n  handleSubmit = () => {\n    const { success, error } = this.validateSubmission();\n    if (!success) {\n      this.setState({otherError: error.message});\n      return\n    }\n    const balance = currency.convertCurrencyTo(this.state['Balance'], 'satoshi', this.props.currency);\n    const transactionOutput = [new models.TransactionOutput(Number(this.state['Output Index']).toString(), this.state['ScriptPubKey'], balance)];\n    const tx = new models.Transaction(this.state['Transaction Hash'], transactionOutput);\n    const submissionResult = this.props.addTransactions(tx);\n    if (!submissionResult.success) {\n      this.setState({otherError: submissionResult.error.message});\n    }\n  }\n\n  get stepSize () {\n    return getCurrencyStepSize(this.props.currency.toLowerCase());\n  }\n\n  render() {\n    const otherError = this.state.otherError;\n    const transactionError = this.state['Transaction Hash error'];\n    const outputIndexError = this.state['Output Index error'];\n    const scriptPubKeyError = this.state['ScriptPubKey error'];\n    const balanceError = this.state['balance error'];\n    const formError = transactionError || outputIndexError || scriptPubKeyError || balanceError || (otherError && otherError.length > 0);\n    return (\n      <Form onSubmit={this.handleSubmit} error={formError} style={{margin: '0'}}>\n          <Message\n            error\n            header='Invalid Input'\n            content={\n              <p style={{overflowWrap: 'break-word'}}>\n                {otherError || (this.state.errorList.length && this.state.errorList[0].message)}\n              </p>}\n          />\n        <Form.Group>\n          <Form.Input style={{marginBottom: '1rem'}}\n                      label='Transaction Hash'\n                      name='Transaction Hash'\n                      value={this.state['Transaction Hash']}\n                      onChange={this.handleChange}\n                      placeholder='Transaction Hash' width={10}\n                      error={transactionError}/>\n          <Form.Input style={{marginBottom: '1rem'}}\n                      label='Output Index'\n                      name='Output Index'\n                      value={this.state['Output Index']}\n                      onChange={this.handleChange}\n                      placeholder='Output Index' width={6}\n                      type='number' min={0}\n                      error={outputIndexError}/>\n        </Form.Group>\n        <Form.Group>\n          <Form.Input style={{marginBottom: '1rem'}}\n                      label='ScriptPubKey'\n                      name='ScriptPubKey'\n                      value={this.state['ScriptPubKey']}\n                      onChange={this.handleChange}\n                      placeholder='ScriptPubKey' width={10}\n                      error={scriptPubKeyError}/>\n          <Form.Input style={{marginBottom: '1rem'}}\n                      label='Balance'\n                      name='Balance'\n                      value={this.state['Balance']}\n                      onChange={this.handleChange}\n                      placeholder={`Balance (${this.props.currency})`} width={6}\n                      type='number' min={0}\n                      error={balanceError}\n                      step={this.stepSize}/>\n        </Form.Group>\n        <Form.Button content='Add Contribution' disabled={formError}/>\n      </Form>\n    );\n  }\n}\n\nexport default ContributionInputManualFrame;\n","import React, { Component } from 'react';\nimport { Form, Message } from 'semantic-ui-react'\nimport { models, utils, services } from 'easy_btc';\nimport { OperationResult, ValidationError } from '../util';\n\nclass AutomaticContributionInputFrame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorList: [],\n      'Bitcoin Address': '',\n      'Bitcoin Address error': false,\n      otherError: false,\n    };\n  }\n\n  validate = (name, value) => {\n    switch (name) {\n      case 'Bitcoin Address':\n        if (!value.length) {\n          return new OperationResult(true);\n        }\n\n        try {\n          const addressType = utils.getAddressFormat(value).toUpperCase();\n          if (addressType !== 'P2PKH') {\n            return new OperationResult(false, new Error(\n              `Address type ${addressType} is not supported. Please supply a P2PKH address.`\n            ));\n          }\n        } catch (error) {\n          if (error instanceof models.InvalidInputError) {\n            return new OperationResult(false, new Error(\n              `Unrecognised address format. Please supply a P2PKH address.`\n            ));\n          }\n          return new OperationResult(false, new Error(\n            `An unexpected error has occurred.`\n          ));\n        }\n\n        try {\n          const network = utils.getAddressNetwork(value).toUpperCase();\n          const expectedNetwork = this.props.network.toUpperCase();\n          if (network !== expectedNetwork) {\n            return new OperationResult(false, new Error(\n              `This address belongs to an compatible network: ${network}.\n              Please use an address from the ${expectedNetwork} or create a new ${network} transaction.`\n            ));\n          }\n        } catch (error) {\n          if (error instanceof models.InvalidInputError) {\n            return new OperationResult(false, new Error(\n              `Unrecognised address network. Please supply a P2PKH address.`\n            ));\n          }\n          return new OperationResult(false, new Error(\n            `An unexpected error has occurred.`\n          ));\n        }\n\n        return new OperationResult(true);\n      default:\n        return; // TODO should this throw an error?\n    }\n  }\n\n  validateSubmission = () => {\n    if (this.state['Bitcoin Address error'] || !this.state['Bitcoin Address']) {\n      return new OperationResult(false, new ValidationError('Please ensure that all required fields are filled.'));\n    }\n    return new OperationResult(true);\n  }\n\n  handleChange = (e, { name, value }) => {\n    const { success, error } = this.validate(name, value);\n    const errorProperty = `${name} error`;\n    const errorList = success? this.removeError(this.state.errorList, name): this.appendError(this.state.errorList, name, error);\n\n    const newState = {\n      [name]: value,\n      [errorProperty]: !success,\n      otherError: false,\n      errorList,\n    };\n    this.setState(newState);\n  }\n\n  handleSubmit = () => {\n    const { success, error } = this.validateSubmission();\n    if (!success) {\n      this.setState({otherError: error.message});\n    } else {\n      services.pullUnspentTransactions(this.state[\"Bitcoin Address\"], this.props.network)\n      .then((response) => {\n        const transaction = response.data;\n        let splitTransactions = [];\n        for (let index = 0; index < transaction.length; index++) {\n          const outputs = transaction[index].outputs;\n          const transactions = Object.keys(outputs).map(\n            (key) => {\n              const transactionOutput = [new models.TransactionOutput(\n                outputs[key].outputIndex.toString(), outputs[key].scriptPubKey, outputs[key].balance)];\n              const tx = new models.Transaction(transaction[index].txHash, transactionOutput);\n              return tx;\n            }\n          );\n          splitTransactions = splitTransactions.concat(transactions);\n        }\n        const submissionResult = this.props.addTransactions(splitTransactions);\n        if (!submissionResult.success) {\n          this.setState({otherError: submissionResult.error.message});\n        }\n      }).catch((error) => {\n        if (error.status === 429) {\n          this.setState({otherError: 'ERROR 429: Too Many Request. This request is being rate limited. Try again with a different input or use the manual input alternative.'});\n        } else {\n          const errMessage = error.message || `${error.status}`;\n          this.setState({otherError: errMessage});\n        }\n      });\n    }\n  }\n\n  appendError = (errorList, name, error) => {\n    // TODO Modularize this in an util\n    let errorListCopy = errorList.slice(0);\n    let found = false;\n    errorListCopy.forEach((element, index) => {\n      if (!found && element.field === name) {\n        errorListCopy[index].message = error.message;\n        found = true;\n      }\n    });\n    if (!found) {\n      errorListCopy.push({\n        field: name,\n        message: error.message,\n      });\n    }\n    return errorListCopy;\n  };\n\n  removeError = (errorList, name) => {\n    // TODO Modularize this in an util\n    return errorList.filter((element) => {\n      return element.field !== name;\n    });\n  }\n\n  render() {\n    const otherError = this.state.otherError;\n    const addressError = this.state['Bitcoin Address error'];\n    const formError = addressError || (otherError && otherError.length > 0);\n    return (\n      <Form onSubmit={this.handleSubmit} error={formError} style={{margin: '0.5rem'}}>\n        <Message\n          error\n          header='Invalid Input'\n          content={\n            <p style={{overflowWrap: 'break-word'}}>\n              {otherError || (this.state.errorList.length && this.state.errorList[0].message)}\n            </p>\n          }\n        />\n        <Form.Group>\n          <Form.Input style={{marginBottom: '1rem'}}\n                      label='Bitcoin Address'\n                      name='Bitcoin Address'\n                      value={this.state['Bitcoin Address']}\n                      onChange={this.handleChange}\n                      placeholder='Bitcoin Address' width={16}\n                      error={addressError}/>\n        </Form.Group>\n        <Form.Button content='Add Contribution' disabled={formError}/>\n      </Form>\n    );\n  }\n}\n\nexport default AutomaticContributionInputFrame;\n","import React, { Component } from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport ContributionInputManualFrame from './contribution_input_manual_frame';\nimport ContributionAutomaticInputFrame from './contribution_automatic_input_frame';\n// TODO change the name ^\n\nclass ContributionInputFrame extends Component {\n\n  render() {\n    return (\n      <div style={{margin: '0 0.5rem 0.5rem 0.5rem'}}>\n        <Tab menu={{ pointing: true, attached: true}}\n             defaultActiveIndex={this.props.tutorial ? 1 : 0}\n             panes={[{ menuItem: 'Automatic', render: () => (\n                      <Tab.Pane>\n                        <ContributionAutomaticInputFrame network={this.props.network}\n                                                         addTransactions={this.props.addTransactions}/>\n                      </Tab.Pane>)},\n                     { menuItem: 'Manual', render: () => (\n                      <Tab.Pane>\n                        <ContributionInputManualFrame addTransactions={this.props.addTransactions}\n                                                      currency={this.props.currency}\n                                                      contributions={this.props.contributions}\n                                                      tutorial={this.props.tutorial}/>\n                      </Tab.Pane>)}]}/>\n      </div>\n    );\n  }\n}\n\nexport default ContributionInputFrame;\n","import React, { Component } from 'react';\nimport { Segment, Button } from 'semantic-ui-react'\nimport ReactResizeDetector from 'react-resize-detector';\nimport { currency } from 'easy_btc';\n\nclass ContributionList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  \n  handleClick = (e, {txhash, outputindex}) => {\n    this.props.callback(txhash, outputindex);\n  }\n\n  convertbalance = (balance) => {\n    return currency.convertCurrencyTo(balance, this.props.currency);\n  }\n\n  renderSegments = () => {\n    let segments = this.props.contributions.map((contribution) => {\n      const contributionId = `${contribution.txHash}:${contribution.output.outputIndex}`;\n      return (\n        <Segment key={contributionId} style={{display: 'flex', alignItems: 'center'}}>\n          <Button style={{boxShadow: 'noneƒ', marginRight: '1rem'}} basic size='small' icon='times' onClick={this.handleClick} txhash={contribution.txHash} outputindex={contribution.output.outputIndex}/>\n          <div style={{display: 'inline', flexGrow: 1, marginBottom: '0', marginRight: '1rem', overflowX: 'auto'}}>\n            <p style={{marginBottom: 0}}>{contributionId}</p>\n            <p style={{opacity: '0.75', wordBreak:'break-word'}}>{`script: ${contribution.output.scriptPubKey}`}</p>\n          </div>\n          <p style={{display: 'inline', overflowX: 'auto'}}>{`${this.convertbalance(contribution.output.balance)} ${this.props.currency}`}</p>\n        </Segment>\n      )\n    });\n    return segments;\n  }\n\n  render() {\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', flexGrow: 1, margin:'0.5rem'}}>\n          <Segment.Group style={{margin: 0}}>\n            {this.renderSegments()}\n          </Segment.Group>\n          <div style={{flexGrow: 1, flexShrink: 0, display:'flex'}}>\n            <ReactResizeDetector handleHeight >\n              {\n                (width, height) => {\n                  if (height < 70) {\n                    return <div />;\n                  }\n                  return (\n                    <div style={{flexGrow: 1, flexShrink: 0, borderStyle:'dashed', borderRadius: '20px', borderWidth: '0.25rem', borderColor: 'white', color: 'white', textAlign: 'center', display:'flex', alignItems:'center', justifyContent:'center', marginTop: this.props.contributions.length? '0.5rem': 0}}>\n                      <div style={{color: 'white'}}>Add Contributions</div>\n                    </div>\n                  );\n                }\n              }\n            </ReactResizeDetector>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default ContributionList;\n","import React, { Component } from 'react';\nimport { Menu, Dropdown } from 'semantic-ui-react';\nimport { currency as currencyUtil } from 'easy_btc';\n\nconst options = [\n  { key: 0, text: 'Satoshi', value: 'Satoshi' },\n  { key: 1, text: 'mBTC', value: 'mBTC' },\n  { key: 2, text: 'BTC', value: 'BTC' },\n];\n\nclass BalanceSegment extends Component {\n  handleChange = (e, { value }) => {\n    this.props.callback(value);\n  }\n\n  render() {\n    const { currency, balance, upward } = this.props;\n    const formattedBalance = currencyUtil.convertCurrencyTo(balance, currency);\n    return (\n      <Menu style={{ margin: '0.5rem' }}>\n        <Menu.Menu position=\"right\">\n          <div className=\"ui transparent icon input\">\n            <input className=\"prompt\" style={{ textAlign: 'right' }} type=\"text\" placeholder=\"Balance\" value={formattedBalance} disabled />\n          </div>\n          <Dropdown item upward={upward} value={currency} options={options} onChange={this.handleChange} />\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}\n\nexport default BalanceSegment;\n","import React, { Component } from 'react';\nimport ContributionInputFrame from './contribution_input_frame';\nimport ContributionList from './contribution_list';\nimport BalanceSegment from './balance_segment';\n\nclass ContributionFrame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {txs: []};\n  }\n\n  appendToTransaction = (tx) => {\n    let txs = this.state['txs'].slice(0);\n    txs.push(tx);\n    this.setState({txs});\n  }\n\n  getContributions = () => {\n    let contributions = [];\n    this.state['txs'].forEach(tx => contributions = contributions.concat(tx.getContributions()));\n    return contributions;\n  }\n\n  render() {\n    const contributions = this.props.contributions;\n    return (\n      <div style={{flexGrow: '1', display: 'flex', flexDirection:'column'}}>\n        <div style={{overflowY: 'scroll', flexGrow: 1, display: 'flex', flexDirection: 'column', margin: '0.5rem 0.5rem 0 0'}}>\n          <ContributionInputFrame addTransactions={this.props.addTransactions} currency={this.props.currency} contributions={contributions} tutorial={this.props.tutorial} network={this.props.network}/>\n          <ContributionList contributions={contributions} callback={this.props.removeTransaction} currency={this.props.currency}/>\n        </div>\n        <BalanceSegment balance={this.props.balance} currency={this.props.currency} callback={this.props.setCurrency} upward={true}/>\n      </div>\n    );\n  }\n}\n\nexport default ContributionFrame;\n","import React, { Component } from 'react';\nimport { Segment, Button } from 'semantic-ui-react'\nimport ReactResizeDetector from 'react-resize-detector';\nimport { currency } from 'easy_btc';\n\nclass PaymentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleClick = (e, {address, amount}) => {\n    this.props.callback(address, amount);\n  }\n\n  convertAmount = (amount) => {\n    return currency.convertCurrencyTo(amount, this.props.currency);\n  }\n\n  renderSegments = () => {\n    let segments = this.props.payments.map((payment, index) => {\n      return (\n        <Segment style={{display: 'flex', alignItems: 'center'}} key={index}>\n          <Button style={{boxShadow: 'noneƒ', marginRight: '1rem'}} basic size='small' icon='times' onClick={this.handleClick} address={payment.to} amount={payment.amount}/>\n          <p style={{display: 'inline', flexGrow: 1, marginBottom: '0', marginRight: '1rem', overflowX: 'auto'}}>{payment.to}</p>\n          <p style={{display: 'inline', overflowX: 'auto'}}>{`${this.convertAmount(payment.amount)} ${this.props.currency}`}</p>\n        </Segment>\n      )\n    });\n    return segments;\n  }\n\n  render() {\n    return (\n        <div style={{ display: 'flex', flexDirection: 'column', flexShrink: 1, flexGrow: 1, overflowY:'scroll', overflowX:'auto', paddingRight: '0.5rem', margin:'0.5rem'}}>\n          <Segment.Group style={{margin: 0}}>\n            {this.renderSegments()}\n          </Segment.Group>\n          <div style={{flexGrow: 1, flexShrink: 0, display:'flex'}}>\n            <ReactResizeDetector handleHeight >\n              {\n                (width, height) => {\n                  if (height < 70) {\n                    return <div />;\n                  }\n                  return (\n                    <div style={{flexGrow: 1, flexShrink: 0, borderStyle:'dashed', borderRadius: '20px', borderWidth: '0.25rem', borderColor: 'white', color: 'white', textAlign: 'center', display:'flex', alignItems:'center', justifyContent:'center', marginTop: this.props.payments.length? '0.5rem': 0}}>\n                      <div style={{color: 'white'}}>Add Payments</div>\n                    </div>\n                  );\n                }\n              }\n            </ReactResizeDetector>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default PaymentList;\n","import React, { Component } from 'react';\nimport { Card, Form, Message } from 'semantic-ui-react'\nimport { models, currency, utils } from 'easy_btc';\nimport { OperationResult, ValidationError, getCurrencyStepSize } from '../util';\n\nclass paymentInputFrame extends Component {\n  constructor(props) {\n    super(props);\n    const state = {\n      errorList: [],\n      'Amount error': false,\n      'Bitcoin Address error': false,\n      otherError: false,\n    };\n    const formValues = this.getInitialFormValues(this.props.tutorial);\n    this.state = {...state, ...formValues}\n  }\n\n  getInitialFormValues = (prefill) => {\n    if (prefill) {\n      return {\n        'Bitcoin Address': 'mjUDEsMXuYFZSrERVZjzHpznNJFzNUBoop',\n        'Amount': '10000000',\n      };\n    }\n    return {\n      'Bitcoin Address': '',\n      'Amount': '',\n    };\n  }\n\n  validate = (name, value) => {\n    switch (name) {\n      case 'Bitcoin Address':\n        if (!value.length) {\n          return new OperationResult(true);\n        }\n\n        try {\n          const addressType = utils.getAddressFormat(value).toUpperCase();\n          if (addressType !== 'P2PKH' && addressType !== 'P2SH') {\n            return new OperationResult(false, new Error(\n              `Address type ${addressType} is not supported. Please supply a P2PKH/P2SH address.`\n            ));\n          }\n        } catch (error) {\n          if (error instanceof models.InvalidInputError) {\n            return new OperationResult(false, new Error(\n              `Unrecognised address format. Please supply a P2PKH/P2SH address.`\n            ));\n          }\n          return new OperationResult(false, new Error(\n            `An unexpected error has occurred.`\n          ));\n        }\n\n        try {\n          const network = utils.getAddressNetwork(value).toUpperCase();\n          const expectedNetwork = this.props.network.toUpperCase();\n          if (network !== expectedNetwork) {\n            return new OperationResult(false, new Error(\n              `This address belongs to an incompatible network: ${network}.\n              Please use an address from the ${expectedNetwork} or create a new ${network} transaction.`\n            ));\n          }\n        } catch (error) {\n          if (error instanceof models.InvalidInputError) {\n            return new OperationResult(false, new Error(\n              `Unrecognised address network. Please supply a P2PKH/P2SH address.`\n            ));\n          }\n          return new OperationResult(false, new Error(\n            `An unexpected error has occurred.`\n          ));\n        }\n\n        return new OperationResult(true);\n      case 'Amount':\n        return new OperationResult(true);\n      default:\n        return; // TODO should this throw an error?\n    }\n  }\n\n  validateSubmission = () => {\n    if (this.state['Bitcoin Address error']\n           || this.state['Amount error']\n           || !this.state['Bitcoin Address'] || !this.state['Bitcoin Address'].length\n           || !this.state['Amount'] || !this.state['Amount'].length) {\n      return new OperationResult(false, new ValidationError('Please ensure that all required fields are filled.'));\n    }\n    return new OperationResult(true);\n  }\n\n  handleChange = (e, { name, value }) => {\n    const { success, error } = this.validate(name, value);\n    const errorProperty = `${name} error`;\n    const errorList = success? this.removeError(this.state.errorList, name): this.appendError(this.state.errorList, name, error);\n\n    const newState = {\n      [name]: value,\n      [errorProperty]: !success,\n      otherError: false,\n      errorList,\n    };\n    this.setState(newState);\n  }\n\n  handleSubmit = () => {\n    const { success, error } = this.validateSubmission();\n    if (!success) {\n      this.setState({otherError: error.message});\n      return\n    }\n    const amount = currency.convertCurrencyTo(this.state['Amount'], 'satoshi', this.props.currency);\n    const payment = new models.Payment(this.state['Bitcoin Address'], amount);\n    const result = this.props.callback(payment);\n    if (!result.success) {\n      this.setState({otherError: result.error.message});\n    }\n  }\n\n  appendError = (errorList, name, error) => {\n    // TODO Modularize this in an util\n    let errorListCopy = errorList.slice(0);\n    let found = false;\n    errorListCopy.forEach((element, index) => {\n      if (!found && element.field === name) {\n        errorListCopy[index].message = error.message;\n        found = true;\n      }\n    });\n    if (!found) {\n      errorListCopy.push({\n        field: name,\n        message: error.message,\n      });\n    }\n    return errorListCopy;\n  };\n\n  removeError = (errorList, name) => {\n    // TODO Modularize this in an util\n    return errorList.filter((element) => {\n      return element.field !== name;\n    });\n  }\n\n  get stepSize () {\n    return getCurrencyStepSize(this.props.currency.toLowerCase());\n  }\n\n  render() {\n    const otherError = this.state.otherError;\n    const addressError = this.state['Bitcoin Address error'];\n    const amountError = this.state['Amount error'];\n    const formError = addressError || amountError || (otherError && otherError.length > 0);\n    return (\n      <div style={{margin: '0.5rem'}}>\n        <Card style={{width: '100%'}}>\n          <Card.Content>\n            <Form onSubmit={this.handleSubmit} error={formError} style={{margin: '0'}}>\n              <Message\n                error\n                header='Invalid Input'\n                content={\n                  <p style={{overflowWrap: 'break-word'}}>\n                    {otherError || (this.state.errorList.length && this.state.errorList[0].message)}\n                  </p>\n                }\n              />\n              <Form.Group>\n                <Form.Input style={{marginBottom: '1rem'}}\n                            label='Bitcoin Address'\n                            name='Bitcoin Address'\n                            value={this.state['Bitcoin Address']}\n                            onChange={this.handleChange}\n                            placeholder='Bitcoin Address' width={10}\n                            error={addressError}/>\n                <Form.Input style={{marginBottom: '1rem'}}\n                            label='Amount'\n                            name='Amount'\n                            value={this.state['Amount']}\n                            onChange={this.handleChange}\n                            placeholder='Amount' width={6}\n                            type='number' min={0}\n                            error={amountError}\n                            step={this.stepSize}/>\n              </Form.Group>\n              <Form.Button content='Add Payment' disabled={formError}/>\n            </Form>\n          </Card.Content>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default paymentInputFrame;\n","import React, { Component } from 'react';\nimport BalanceSegment from './balance_segment';\nimport PaymentList from './payment_list';\nimport PaymentInputFrame from './payment_input_frame';\n\nclass PaymentFrame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div style={{width:'100%', flexGrow: 1, display: 'flex', flexDirection: 'column'}}>\n        <BalanceSegment balance={this.props.balance} currency={this.props.currency} callback={this.props.setCurrency} upward={false}/>\n        <PaymentInputFrame callback={this.props.callback} currency={this.props.currency} network={this.props.network} tutorial={this.props.tutorial}/>\n        <PaymentList payments={this.props.payments} currency={this.props.currency} callback={this.props.removePayment}/>\n      </div>\n    );\n  }\n}\n\nexport default PaymentFrame;\n","import React from 'react';\n\nconst ErrorFrame = () => {\n  return (\n    <div>\n      Error\n    </div>\n  )\n}\n\nexport default ErrorFrame;","import React, { Component } from 'react';\nimport { Dropdown, Message, Transition } from 'semantic-ui-react';\nimport { utils, models } from 'easy_btc';\nimport { OperationResult } from '../util';\n\nclass AddressDropdown extends Component {\n  constructor(props) {\n    super(props);\n    const stateOptions = props.addresses.map(address => ({ key: address, value: address, text: address }));\n    stateOptions.push(\n      { key: '', value: '', text: 'None' },\n    );\n    this.state = {\n      searchQuery: props.returnAddress,\n      value: props.tutorial ? props.addresses[0] : '',\n      error: false,\n      errorMessage: '',\n      triggerAnimation: false,\n      stateOptions,\n    };\n  }\n\n  get stateOptions() {\n    const { stateOptions, searchQuery } = this.state;\n    const { addresses } = this.props;\n    if (searchQuery.length && !addresses.includes(searchQuery)) {\n      const stateOptionsCopy = stateOptions.slice(0);\n      stateOptionsCopy.push({ key: searchQuery, value: searchQuery, text: searchQuery });\n      return stateOptionsCopy;\n    }\n    return stateOptions;\n  }\n\n  validateAddress = (value) => {\n    if (!value.length) {\n      return new OperationResult(true);\n    }\n\n    try {\n      const addressType = utils.getAddressFormat(value).toUpperCase();\n      if (addressType !== 'P2PKH') {\n        return new OperationResult(false, new Error(\n          `Address type ${addressType} is not supported. Please supply a P2PKH address.`,\n        ));\n      }\n    } catch (error) {\n      if (error instanceof models.InvalidInputError) {\n        return new OperationResult(false, new Error(\n          'Unrecognised address format. Please supply a P2PKH address.',\n        ));\n      }\n\n      return new OperationResult(false, new Error(\n        'An unexpected error has occurred.',\n      ));\n    }\n\n    try {\n      const network = utils.getAddressNetwork(value).toUpperCase();\n      const expectedNetwork = this.props.network.toUpperCase();\n      if (network !== expectedNetwork) {\n        return new OperationResult(false, new Error(\n          `This address belongs to an compatible network: ${network}.\n          Please use an address from the ${expectedNetwork} or create a new ${network} transaction.`,\n        ));\n      }\n    } catch (error) {\n      if (error instanceof models.InvalidInputError) {\n        return new OperationResult(false, new Error(\n          'Unrecognised address network. Please supply a P2PKH address.',\n        ));\n      }\n\n      return new OperationResult(false, new Error(\n        'An unexpected error has occurred.',\n      ));\n    }\n\n    return new OperationResult(true);\n  }\n\n  handleChange = (e, { value }) => {\n    const validation = this.validateAddress(value);\n    if (validation.success) {\n      const { setReturnAddress } = this.props;\n      this.setState({\n        value,\n        error: false,\n        errorMessage: '',\n      });\n      setReturnAddress(value);\n    } else {\n      const { triggerAnimation } = this.state;\n      this.setState({\n        error: true,\n        errorMessage: validation.error.message,\n        triggerAnimation: !triggerAnimation,\n      });\n    }\n  }\n\n  handleSearchChange = (e, { searchQuery }) => {\n    const validation = this.validateAddress(searchQuery);\n\n    if (validation.success) {\n      this.setState({\n        searchQuery,\n        error: false,\n        errorMessage: '',\n        triggerAnimation: false,\n      });\n    } else {\n      this.setState({\n        searchQuery,\n        error: true,\n        errorMessage: validation.error.message,\n        triggerAnimation: true,\n      });\n    }\n  }\n\n  render() {\n    const {\n      searchQuery, value, error, errorMessage, triggerAnimation,\n    } = this.state;\n\n    return (\n      <div style={{ flexGrow: 1 }}>\n        { error\n          && (\n            <Transition animation=\"shake\" duration={200} visible={triggerAnimation}>\n              <Message\n                error\n                header=\"Invalid Input\"\n                content={<p style={{ overflowWrap: 'break-word' }}>{errorMessage}</p>}\n              />\n            </Transition>\n          )\n        }\n        <Dropdown\n          fluid\n          onChange={this.handleChange}\n          onSearchChange={this.handleSearchChange}\n          options={this.stateOptions}\n          placeholder=\"Select Return Address\"\n          search\n          searchQuery={searchQuery}\n          selection\n          value={value}\n          error={error}\n        />\n      </div>\n    );\n  }\n}\nexport default AddressDropdown;\n","import React, { Component } from 'react';\nimport { lightLime, lime } from '../style/colors';\nimport { Input, Dropdown, Message, Transition } from 'semantic-ui-react'\nimport transferIcon from '../icons/bitcoin-transfer.svg';\nimport AddressDropdown from './address_dropdown';\nimport { fees, transaction, models, currency } from 'easy_btc';\n\nconst currencyOptions = [\n  { key: 0, text: 'Satoshi', value: 'Satoshi' },\n  { key: 1, text: 'mBTC', value: 'mBTC' },\n  { key: 2, text: 'BTC', value: 'BTC' },\n];\n\nconst sizeOptions = [\n  {\n    key: 'byte',\n    text: 'bytes',\n    value: 'byte',\n  },\n  {\n    key: 'kB',\n    text: 'kB',\n    value: 'kB',\n  },\n];\n\nclass FeesFrame extends Component {\n  constructor(props) {\n    super(props);\n    const totalFeeSatoshi = props.returnPayment ? props.balance - props.returnPayment.amount : props.balance;\n    const totalFee = currency.convertCurrencyTo(totalFeeSatoshi, this.props.currency);\n    const returnAddress = props.returnPayment ? props.returnPayment.to : '';\n    const state = this.calculateFeeState(totalFeeSatoshi, returnAddress, props.returnPayment);\n    this.state = {...{\n      returnAddress: returnAddress,\n      message: `Autmatic fee calculation may not be able to use the exact fee rate requested.\n        In such cases it will instead use the closest fee rate possible.`,\n      sizeUnit: this.rateOptions[0].value,\n      totalFee,\n    }, ...state};\n  }\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.returnAddress !== prevState.returnAddress) {\n      const rawFee = currency.convertCurrencyTo(this.state.totalFee, 'satoshi', this.props.currency);\n      const state = this.calculateFeeState(rawFee, this.state.returnAddress);\n      this.setState({...state, totalFee: currency.convertCurrencyTo(rawFee, this.props.currency)});\n      this.props.setReturnPayment(state.returnPayment);\n    } if (this.props.currency !== prevProps.currency) {\n      const totalFee = currency.convertCurrencyTo(this.state.totalFee, this.props.currency, prevProps.currency);\n      this.setState({totalFee});\n    }\n  }\n\n  get rateOptions () {\n    return [\n      {\n        key: 'byte',\n        text: `${this.props.currency}/byte`,\n        value: 'byte',\n      },\n      {\n        key: 'kB',\n        text: `${this.props.currency}/kB`,\n        value: 'kB',\n      },\n    ];\n  }\n\n  changeSizeUnit = (e, {value}) => {\n    this.setState({sizeUnit: value});\n  }\n  setReturnAddress = (returnAddress) => {\n    this.setState({returnAddress});\n  }\n\n  handleChange = (e, {value}) => {\n    const fee = currency.convertCurrencyTo(value, 'satoshi', this.props.currency);\n    const state = this.calculateFeeState(fee, this.state.returnAddress);\n    this.setState({...state, totalFee: value});\n    this.props.setReturnPayment(state.returnPayment);\n  }\n\n  calculateDefaultAddressState = (totalFee, presetPayment) => {\n    let payments = this.props.payments;\n    let balance = 0;\n    if (presetPayment) {\n      payments = [...payments, presetPayment];\n      balance = presetPayment.amount;\n    }\n    const modTx = transaction.createSignedTransaction(\n      this.props.contributions,\n      payments,\n      this.props.privKeysArg);\n    const feeRate = Math.ceil(fees.getFeeRate(modTx, totalFee));\n    return {\n      size: modTx.getSize(),\n      feeRate: feeRate,\n      remainingBalance: balance,\n      error: false,\n      errorMessage: '',\n      triggerAnimation: false,\n      returnPayment: null,\n    };\n  }\n\n  calculateFeeState = (value, returnAddress, presetPayment) => {\n    if (!returnAddress || presetPayment) {\n      return this.calculateDefaultAddressState(value, presetPayment);\n    }\n    const balance = this.props.balance - value;\n    if (balance < 0) {\n      return {\n        size: 0,\n        feeRate: '',\n        remainingBalance: 'ERROR',\n        error: true,\n        errorMessage: 'Total fee must be less than or equal to the available balance.',\n        triggerAnimation: true,\n        returnPayment: null,\n      };\n    }\n    const newPayment = new models.Payment(returnAddress, balance);\n    const payments = [...this.props.payments, newPayment];\n    const modTx = transaction.createSignedTransaction(\n      this.props.contributions,\n      payments,\n      this.props.privKeysArg);\n    const feeRate = Math.ceil(fees.getFeeRate(modTx, value));\n    // TODO the way that this handles returnPayment kinda sucks\n    return {\n      size: modTx.getSize(),\n      feeRate,\n      remainingBalance: balance,\n      error: false,\n      errorMessage: '',\n      triggerAnimation: false,\n      returnPayment: newPayment,\n    };\n  }\n\n  get message () {\n    if (this.state.error) { \n      return (<Transition animation='shake' duration={200} visible={this.state.triggerAnimation}>\n        <Message negative\n                header='Invalid Input'\n                content={\n                  <p style={{overflowWrap: 'break-word'}}>\n                    {this.state.errorMessage}\n                  </p>\n                }/>\n      </Transition>);\n    }\n    return null;\n  }\n\n  setCurrency = (e, { value }) => {\n    this.props.setCurrency(value);\n  }\n\n  render() {\n    const feeRate = fees.formatSize(currency.convertCurrencyTo(this.state.feeRate, this.props.currency), this.state.sizeUnit);\n    const remainingBalance = currency.convertCurrencyTo(this.state.remainingBalance, this.props.currency);\n    const size = fees.formatSize(this.state.size, this.state.sizeUnit);\n    return (\n      <div style={{flexGrow: '1', display: 'flex', flexDirection:'column', overflowY:'auto'}}>\n        <div style={{flexGrow: '1', display: 'flex', background: lime, margin: '0.5rem 0.5rem 0 0.5rem', borderRadius: '0.5rem 0.5rem 0 0', backgroundImage: `url(${transferIcon})`, backgroundRepeat: 'no-repeat', backgroundPosition: 'center'}} />\n        <div style={{display: 'flex', flexDirection:'column', background: lime, margin: '0 0.5rem 0.5rem 0.5rem', borderRadius: '0 0 0.5rem 0.5rem'}}>\n          <div style={{fontSize: '2em', margin: '2rem 2rem 1rem 2rem', textAlign:'center'}}>Remaining Balance: {`${remainingBalance} ${this.props.currency}`}</div>\n          <div style={{display: 'flex', margin:'1rem 2rem 2rem 2rem'}}>\n            <AddressDropdown setReturnAddress={this.setReturnAddress} returnAddress={this.state.returnAddress} addresses={this.props.addresses} network={this.props.network} tutorial={this.props.tutorial}/>\n          </div>\n          <div style={{display: 'flex', flexDirection:'column', padding:'2rem 1rem 1rem 1rem', background:lightLime, borderRadius: ' 0 0 0.5rem 0.5rem'}}>\n            {this.message}\n            <div style={{display: 'flex', justifyContent:'space-evenly'}}>\n              <div style={{margin: 'auto 0.5rem', width: '10rem'}}>Total Fees</div>\n              <Input style={{flexGrow:'0.3', margin:'0.5rem', width: '20rem'}}\n                     value={this.state.totalFee}\n                     onChange={this.handleChange}\n                     disabled={!this.state.returnAddress}\n                     label={\n                      <Dropdown options={currencyOptions}\n                                onChange={this.setCurrency}\n                                value={this.props.currency}\n                                upward\n                      />\n                     }\n                     labelPosition='right' type='number' min={0}\n                     step={1}/>\n            </div>\n            <div style={{display: 'flex', justifyContent:'space-evenly'}}>\n              <div style={{margin: 'auto 0.5rem', width: '10rem'}}>Fee Rate</div>\n              <Input style={{flexGrow:'0.3', margin:'0.5rem', width: '20rem'}}\n                     value={feeRate}\n                     disabled\n                     label={\n                      <Dropdown options={this.rateOptions}\n                                onChange={this.changeSizeUnit}\n                                value={this.state.sizeUnit}\n                                upward/>}\n                     labelPosition='right' type='number' min={0}/>\n            </div>\n            <div style={{display: 'flex', justifyContent:'space-evenly'}}>\n              <div style={{margin: 'auto 0.5rem', width: '10rem'}}>Size</div>\n              <Input style={{flexGrow:'0.3', margin:'0.5rem', width: '20rem'}}\n                     value={size}\n                     disabled\n                     label={\n                      <Dropdown options={sizeOptions}\n                                onChange={this.changeSizeUnit}\n                                value={this.state.sizeUnit}\n                                upward/>}\n                     labelPosition='right' type='number' min={0}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FeesFrame;\n","import React from 'react'\n\nexport function GenericLog ({log, showResult}) {\n  const renderResult = () => {\n    return (\n      <div style={{marginTop: '0.5rem', opacity:'0.6'}}>\n        <div style={{fontWeight:'bold'}}>\n          Result\n        </div>\n        {log.result.map((singleLog => {\n          return (\n            <div style={{marginTop: '0.5rem'}}>\n              {singleLog}\n            </div>\n          );\n        }))}\n      </div>\n    );\n  }\n  const renderSubaction = () => {\n    return (\n      <div style={{marginTop: '0.5rem', opacity:'0.6'}}>\n        <div style={{fontWeight:'bold'}}>\n          Sub-Action\n        </div>\n        {log.subaction.map((subaction => {\n          return (\n            <div style={{marginTop: '0.5rem'}}>\n              {subaction.log}\n            </div>\n          );\n        }))}\n      </div>\n    );\n  }\n  return (\n    <div>\n      <div>\n        <span style={{color: 'red', fontWeight:'bold'}}>\n          {`${log.action} `}\n        </span>\n        {log.object}\n      </div>\n      { log.hasSubaction() && renderSubaction() }\n      { showResult && log.hasResult() && renderResult() }\n    </div>\n  );\n}","import React, { Component }from 'react';\nimport { Segment, Header } from 'semantic-ui-react'\n\nclass TranactionSnapshot extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleHover = (e) => {\n    e.stopPropagation();\n  }\n\n  handleClick = (e) => {\n    e.stopPropagation();\n  }\n\n  renderGroup(element, index=0) {\n    let value = <div>EMPTY</div>;\n    if (!element.value) {\n      value = <div>Undefined</div>;\n    } else if (typeof element.value[0] === 'string') {\n      value = <div>{element.value[0]}</div>;\n    } else if (Array.isArray(element.value[0])) {\n      value = element.value.map((array ,index) => {\n        return (\n          <div style={{marginTop: '1rem'}}>\n            <b>{`${element.key}:${index}`}</b>\n            {this.renderSubGroup(array)}\n          </div>\n        );\n      });\n    }\n    return this.renderSegment(element.key, value);\n  }\n\n  renderSubGroup(element, index=0) {\n    return (\n      <div style={{marginLeft: '1rem'}}>\n        {\n          element.map(el => {\n            const value = typeof el.value[0] === 'string' ? el.value : this.renderSubGroup(el.value);\n            return (\n            <div style={{wordBreak: 'break-word'}}>\n              <b>{el.key}:</b> {value}\n            </div>);\n          })\n        }\n      </div>\n    );\n  }\n\n  renderSegment(header, value) {\n    return (\n    <Segment>\n      <Header sub style={{marginBottom: '0.5rem'}}>{header}</Header>\n      <div>{value}</div>\n    </Segment>\n    );\n  }\n\n  render() {\n    return (\n      <Segment.Group onClick={this.handleClick} onMouseOver={this.handleHover} onMouseLeave={this.handleHover}>\n        { this.props.snapshot.map(element => this.renderGroup(element)) }\n      </Segment.Group>\n    )\n  }\n};\n\nexport default TranactionSnapshot;\n","import React, { Component }from 'react';\nimport { Segment, Header } from 'semantic-ui-react'\nimport Snapshot from './transaction_snapshot';\nimport { PascalCase } from '../util';\n\nclass TransactionTitleSegment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false,\n      showSnapshot: false,\n    };\n  }\n\n  handleHoverOver = () => {\n    this.setState({hover: true});\n  }\n\n  handleHoverExit = () => {\n    this.setState({hover: false});\n  }\n\n  handleClick = () => {\n    this.setState({showSnapshot: !this.state.showSnapshot});\n  }\n\n  renderSnapshot () {\n    if (this.state.showSnapshot) {\n      return (\n        <Snapshot snapshot={this.props.snapshot}/>\n      );\n    }\n  }\n  render() {\n    return (\n      <Segment inverted style={{overflow: 'auto', fontStyle: 'bold'}}\n               color='teal'\n               tertiary={this.state.hover}\n               onMouseOver={this.handleHoverOver}\n               onMouseLeave={this.handleHoverExit}\n               onClick={this.handleClick}>\n          <Header as='h4'>{ PascalCase(this.props.item) }</Header>\n          {this.renderSnapshot()} \n      </Segment>\n    );\n  }\n}\n\nexport default TransactionTitleSegment;","import React, { Component } from 'react'\nimport { Segment } from 'semantic-ui-react'\nimport { utils, models } from 'easy_btc';\nimport { GenericLog } from './log_segments';\nimport TransactionTitle from './transaction_title_segment';\n\nclass ComplexSegmentGroup extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {};\n  }\n\n  createSection = (dictkey, dict, key) => {\n    const sectionDict = dict.getValue(dictkey);\n    const containsSubHeadings = utils.isIterable(sectionDict[0]);\n    const section = containsSubHeadings ?\n      sectionDict.map((masterLog, index) => {\n        const singularTitle = dictkey.substring(0, dictkey.length-1);\n        return this.createSegmentGroup(`${singularTitle} ${index}`, masterLog, index);\n      }) : this.createSegmentGroup(dictkey, sectionDict, key);\n\n    return section;\n  }\n\n  createSegmentGroup = (title, logArray, key = 0) => {\n    // Pulls transaction state from the append transaction log\n    let finalLog = logArray[logArray.length-1];\n    if (finalLog instanceof models.OrderedDict) {\n      const keys = finalLog.getKeys();\n      finalLog = finalLog.getValue(keys[keys.length-1]);\n      finalLog = finalLog[finalLog.length-1]\n    }\n    const transactionDict = finalLog.transactionDict.getArray();\n    return (\n      <Segment.Group key={key}>\n        <TransactionTitle item={title} snapshot={transactionDict}/>\n        { logArray.map((log, index) => this.createSegment(log, key, index)) }\n      </Segment.Group>\n    );\n  }\n\n  createSegment = (item, key, index) => {\n    if (utils.isIterable(item)) {\n      const firstItem = item[0];\n      const tailItems = [...item].splice(1);\n      const firstSegment = this.createSegment(firstItem, key, index + 1);\n      return [firstSegment].concat(this.createSubSegments(tailItems, key, index + 1));\n    } else if (item instanceof models.OrderedDict) {\n      const items = item.getKeys().map((key, subIndex) => {\n        return [\n          <Segment inverted color='teal' secondary>{key}</Segment>,\n          this.createSegment(item.getValue(key), key, `${index}.${subIndex}`),\n        ];\n      });\n      return items;\n    }\n    return (\n      <Segment key={`${key}.${index}.${item.log}`} style={{overflow: 'auto', wordBreak: 'break-all'}}>\n        <GenericLog log={item} showResult/>\n      </Segment>\n    )\n  }\n\n  createSubSegments = (items, key, subIndex) => {\n    const subSegments = items.map((item, i) => {\n      if (item.hasSubaction && item.hasSubaction()) {\n        return item.subaction.map((subaction) => {\n          return(\n            <div key={`${key}.${subIndex}.${i}.${item.log}`} style={{display: 'flex'}}>\n              <div style={{backgroundColor: 'grey', minWidth:'20px'}} />\n              <Segment style={{overflow: 'auto', marginTop:'0', flexGrow:'1', borderBottom:'none', borderRadius:'0', wordBreak: 'break-all'}}>\n                <GenericLog log={subaction} showResult/>\n              </Segment>\n            </div>\n          );\n        })\n      }\n      return (\n        <div key={`${key}.${subIndex}.${i}.${item.log}`} style={{display: 'flex'}}>\n          <div style={{backgroundColor: 'grey', minWidth:'10px'}} />\n          <Segment style={{overflow: 'auto', marginTop:'0', flexGrow:'1', borderBottom:'none', borderRadius:'0', wordBreak: 'break-all'}}>\n            <GenericLog log={item} showResult/>\n          </Segment>\n        </div>\n      );\n    });\n  \n    return subSegments;\n  };\n\n  render() {\n    let { transaction } = this.props;\n    return (\n      <div style={{ flexBasis: 1, flexShrink: 1, flexGrow: 1, overflowY:'scroll', margin:'0.5rem', paddingRight:'0.5rem'}}>\n        { transaction.logger.getKeys().map((key, i) => this.createSection(key, transaction.logger, i)) }\n      </div>\n    );\n  }\n}\n\nexport default ComplexSegmentGroup;\n","import React, { Component } from 'react';\nimport { Segment } from 'semantic-ui-react'\nimport { utils } from 'easy_btc';\n\nclass TxHashSegment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  get segmentedHash () {\n    return utils.joinArray(this.props.transaction.transactionDict).array.join('');\n  }\n  render() {\n    return (\n      <Segment style={{overflow: 'auto', fontSize: '2.5em', padding: '1.5rem'}}>\n          { this.segmentedHash }\n      </Segment>\n    );\n  }\n}\n\nexport default TxHashSegment;\n","import React, { Component }from 'react';\nimport ComplexSegmentGroup from './segment';\nimport TxHashSegment from './transaction_hash_segment';\nimport { utils } from 'easy_btc';\nclass TxBreakdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transaction: props.transaction,\n      txhash: utils.joinArray(props.transaction.transactionDict).array.join(''),\n    };\n  }\n\n  render() {\n    return (\n      <div style={{width:'100%', flexGrow: '1', display: 'flex', flexDirection:'column'}}>\n        <div style={{margin:'0.5rem'}}>\n          {/* <Segment style={{overflow: 'auto', fontSize: '2.5em', padding: '1.5rem'}}>\n          { this.state.txhash }\n          </Segment> */}\n          <TxHashSegment transaction={this.state.transaction}/>\n        </div>\n        <ComplexSegmentGroup transaction={this.state.transaction}/>\n      </div>\n    )\n  }\n};\n\nexport default TxBreakdown;\n","import React, { Component } from 'react';\nimport { Form, Transition, Message } from 'semantic-ui-react'\nimport lockIcon from '../icons/lock.svg';\nimport { darkPink, lightPink } from '../style/colors';\nimport unlockIcon from '../icons/unlock.svg';\nimport { utils, models } from 'easy_btc';\nimport { OperationResult } from '../util';\nclass SigningForm extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      hover: false,\n      backgroundColor: lightPink,\n      formValue: props.tutorial ? 'cRKHcyn9Diw4GmcAaxRUdJH3Kgaz3j1KBFq1i6QwC2U9STqK7YXm': '',\n      error: false,\n      errorMessage: '',\n      triggerAnimation: false,\n    };\n  }\n\n  handleMouseEnter = () => {\n    if (this.props.unlocked) {\n      this.setState({backgroundColor: darkPink});\n    }\n  }\n\n  handleMouseExit = () => {\n    if (this.props.unlocked) {\n      this.setState({backgroundColor: lightPink});\n    }\n  }\n\n  handleChange = (e, { value }) => {\n    const validatePriv = this.validatePriv(value);\n    if (validatePriv.success) {\n      this.setState({\n        formValue: value,\n        error: false,\n        errorMessage: '',\n        triggerAnimation: false,\n      });\n    } else {\n      this.setState({\n        formValue: value,\n        error: true,\n        errorMessage: validatePriv.error.message,\n        triggerAnimation: true,\n      });\n    }\n  }\n\n  handleClick = () => {\n    //TODO the handlers should probable be detached rather than this if statement\n    this.props.removeKey(this.props.address);\n  }\n\n  validatePriv = (priv) => {\n    try {\n      if (priv) {\n        const keyFormat = utils.getPrivateKeyFormat(priv);\n        if (keyFormat !== 'wif_compressed' && keyFormat !== 'wif') {\n          return new OperationResult(false, new Error(`Invalid key format '${keyFormat.toUpperCase()}'.\n            Please encode your key as WIF.`));\n        }\n      }\n    } catch (error) {\n      if (error instanceof models.InvalidInputError) {\n        return new OperationResult(false, new Error('Invalid key format. Please ensure that your key is encoded as WIF.'));\n      }\n      return new OperationResult(false, new Error('An unexpected error has occured.'));\n    }\n    return new OperationResult(true);\n  }\n\n  handleSubmit = () => {\n    if (this.state.error) {\n      this.setState({\n        triggerAnimation: !this.state.triggerAnimation,\n      });\n    } else {\n      return this.props.callback(this.props.address, this.state.formValue);\n    }\n  }\n\n  // TODO add bottom border radius to locked frame\n  renderForm = () => {\n    return (\n      <Form style={{margin: '1rem', marginTop: '2.5rem'}} onSubmit={this.handleSubmit} error={this.state.error}>\n        <Transition animation='shake' duration={200} visible={this.state.triggerAnimation}>\n          <Message error\n                  header='Invalid Input'\n                  content={\n                    <p style={{overflowWrap: 'break-word'}}>\n                      {this.state.errorMessage}\n                    </p>\n                  }/>\n        </Transition>\n        <Form.Input name={this.props.address} value={this.state.formValue || ''} onChange={this.handleChange} type={this.props.tutorial ? 'text' : 'password'} placeholder={'Insert private key'} error={this.state.error}/>\n        <Form.Button content={'Unlock'} style={{float:'right', margin:0}}/>\n      </Form>);\n  }\n\n  render() {\n    const style = {\n      display:'flex',\n      flexDirection:'column',\n      flexGrow:1,\n      background:this.state.backgroundColor,\n    };\n\n    if (this.props.unlocked) {\n      style.borderRadius = '0.5rem';\n    } else {\n      style.borderTopLeftRadius = '0.5rem';\n      style.borderTopRightRadius = '0.5rem';\n    }\n    return (\n      // TODO check how segment retains min height\n      <div style={{display:'flex', flexDirection:'column', margin: '0.5rem', marginTop: '0', flexGrow:1, background:'white', borderRadius: '0.5rem', minHeight: '20rem'}}\n           onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseExit} onClick={this.handleClick}>\n          <div style={style}>\n            <div style={{flexGrow:2}}/>\n            <img style={{flexGrow:6}} src={this.props.unlocked? unlockIcon : lockIcon} alt={this.props.unlocked? 'unlockIcon': 'lockIcon'}/>\n            <div style={{flexGrow:2, display:'flex', justifyContent: 'center', alignItems: 'center', padding:'1rem'}}>\n              <div style={{color: 'white', overflowX:'auto', fontWeight: 'bold'}}>\n                {this.props.address}\n              </div>\n            </div>\n          </div>\n          {!this.props.unlocked && this.renderForm()}\n      </div>\n    );\n  }\n}\n\nclass SigningFrame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleSubmit = (txHash, priv) => {\n    this.props.addPrivateKey(txHash, priv);\n  }\n\n  removePrivateKey = (txHash) => {\n    this.props.removePrivateKey(txHash);\n  }\n\n  render() {\n    return (\n      <div style={{flexGrow: '1', display: 'flex', flexDirection:'column', overflowY:'auto', marginTop: '0.5rem'}}>\n        {this.props.transactions.map((tx) => {\n          const address = `${tx.txHash}:${Object.keys(tx.outputs)[0]}`;\n          return (\n            <SigningForm address={address} callback={this.handleSubmit} removeKey={this.removePrivateKey}\n                         key={address} unlocked={this.props.privKeys[address] && this.props.privKeys[address].length > 0}\n                         tutorial={this.props.tutorial}/>)\n        })}\n      </div>\n    );\n  }\n}\n\nexport default SigningFrame;\n","import React from 'react'\nimport { Modal } from 'semantic-ui-react'\n\nfunction ErrorModal ({open, handleOpen, handleClose, message}) {\n  return (\n    <Modal open={open}\n          onOpen={handleOpen}\n          onClose={handleClose}>\n      <Modal.Header>Error</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <p style={{wordBreak: 'break-word'}}>{message}</p>\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  );\n}\n\nexport default ErrorModal;\n","import React, { Component } from 'react'\nimport { Header, Modal, Button } from 'semantic-ui-react'\nimport {ObjectInspector} from 'react-inspector';\n\nfunction SubmissionModal ({open, handleOpen, handleClose, message, result, tutorial, reset}) {\n  const renderContent = () => {\n    if (tutorial) {\n      return (\n        <div>\n          <p style={{wordBreak: 'break-word'}}>\n            Congratulations! You have completed the tutorial.\n            Click the button below to return to the starting page.\n          </p>\n        </div>\n      );\n    }\n    if (result === 'Succeeded') {\n      return (\n        <div style={{overflow: 'auto'}}>\n          <ObjectInspector data={message} name={'response'} expandLevel={10}/>\n        </div>\n      );\n    }\n    return (<p style={{wordBreak: 'break-word'}}>{message}</p>);\n  }\n  return (\n    <Modal open={open}\n           onOpen={handleOpen}\n           onClose={handleClose}\n           closeIcon>\n      <Modal.Header>Transaction Submitted</Modal.Header>\n      <Modal.Content scrolling>\n        <Modal.Description>\n          <Header>Submission {result}</Header>\n          {renderContent()}\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n          <Button onClick={reset}>Return To Home</Button>\n        </Modal.Actions>\n    </Modal>\n  );\n}\n\nexport default SubmissionModal;\n","import React, { Component } from 'react';\nimport { Modal, Image, Pagination, Icon, Header } from 'semantic-ui-react';\nimport automaticContributionIMG from '../images/automatic_contribution.png';\nimport manualContributionIMG from '../images/manual_contribution.png';\nimport paymentIMG from '../images/payment.png';\nimport currencyIMG from '../images/currency.png';\nimport signingIMG from '../images/signing.png'\nimport feeIMG from '../images/fee.png';\nimport returnAddressIMG from '../images/return_address.png';\nimport transactionLogIMG from '../images/transaction_log.png';\nimport transactionStateIMG from '../images/transaction_state.png';\nimport publishIMG from '../images/publish_transaction.png';\n\nfunction ContributionFrameHelp () {\n  const page1 = (\n    <div>\n      <p>\n        Bitcoin balances are stored within bitcoin transactions. Not wallets. Not addresses.\n        Transaction are defined about \"inputs\" and \"outputs\". Inputs are references to other transaction outputs,\n        they act like contributions to the transaction and define the collective value. Outputs are then\n        analogous to payments, where the collective value of the inputs are spent.\n      </p>\n      <p>\n        ALL unspent bitcoins are spent as fees.\n      </p>\n      <p>\n        Here, we first define the inputs. Begin by using the automatic input system, that utilizes\n        a third party service to extract unspent balances belonging to an address. Or, make\n        use of the manual input system to fill in the necessary information yourself.\n      </p>\n    </div>\n  );\n\n  const page2 = (\n    <div>\n      <Image src={automaticContributionIMG} fluid/>\n      <p style={{wordBreak: 'break-word', marginTop: '1rem'}}>\n        To add an input/ inputs using the automatic system, simply enter in your\n        bitcoin address and click \"Add Contribution\". This will pull all the unspent transaction outputs\n        that relate to the specified address. The inputs may be pruned as necessary. The address should\n        exist in the network that was selected on the first page.\n      </p>\n    </div>\n  );\n\n  const page3 = (\n    <div>\n      <Image src={manualContributionIMG} fluid/>\n      <p style={{wordBreak: 'break-word', marginTop: '1rem'}}>\n        A transaction input requires 3 pieces of information to be defined.\n      </p>\n      <ul>\n        <li>\n          <h5>The transaction hash</h5>\n            To identify the transaction where the bitcoins are stored/recieved.\n        </li>\n        <li>\n          <h5>The output index</h5>\n            To identify which output within the specified transaction that the\n            bitcoins are stored.\n        </li>\n        <li>\n          <h5>The script</h5>\n            This is the authentication measure required to prove the ownership\n            of the value. Effectively, it is the \"lock\" that secures the bitcoins.\n        </li>\n      </ul>\n      <p>\n        To add an input using the manual system, provide the above stated details and click \"Add Contribution\".\n        Once again, the transaction should belong to the network selected on the first page.\n      </p>\n      <p>\n        The balance is not required to define the transaction input. However it is\n        necessitated in this software as a convenience measure for later computation.\n      </p>\n    </div>\n  );\n\n  const page4 = (\n    <div>\n      <Image src={currencyIMG} fluid/>\n      <p style={{wordBreak: 'break-word', marginTop: '1rem'}}>\n        The currency format can be changed by using the dropdown next to the balance shown in the picture above.\n        This will change the currency displayed as well as the currency for input.\n      </p>\n    </div>\n  );\n\n  const page5 = (\n    <div>\n      <p>\n        The manual input form has been filled out for you. Please click \"Add Contribution\" to add the defined transaction input\n        and click \"Next\" on the bottom right to continue.\n      </p>\n    </div>\n  );\n  \n  return [\n    {\n      title: 'Add Transaction Input',\n      page: page1,\n    },\n    {\n      title: 'Add Input Automatically',\n      page: page2,\n    },\n    {\n      title: 'Add Input Manually',\n      page: page3,\n    },\n    {\n      title: 'Changing The Currency Format',\n      page: page4,\n    },\n    {\n      title: 'Tutorial',\n      page: page5,\n    },\n  ]\n}\n\nfunction PaymentFrameHelp () {\n  const page1 = (\n    <div>\n      <Image src={paymentIMG} fluid/>\n      <p style={{wordBreak: 'break-word', marginTop: '1rem'}}>\n        After defining inputs for our transaction, we can now create the outputs for our expenditures.\n      </p>\n      <p>\n        To add an output, simply enter in the bitcoin address of your recipient, the amount you wish to send\n        and click \"Add Payment\". Similar to the inputs, ensure that the recipient address exists on the\n        selected network.\n      </p>\n    </div>\n  );\n\n  const page2 = (\n    <div>\n      <p>\n      The input form for payments has been filled out for you. Please click \"Add Payment\" to add the pre-defined\n      transaction output. Then click \"Next\" on the bottom right to continue.\n      </p>\n    </div>\n  );\n  return [\n    {\n      title: 'Add Transaction Outputs',\n      page: page1,\n    },\n    {\n      title: 'Tutorial',\n      page: page2,\n    },\n  ];\n}\n\nfunction SigningFrame () {\n  const page1 = (\n    <div>\n      <Image src={signingIMG} fluid/>\n      <p style={{wordBreak: 'break-word', marginTop: '1rem'}}>\n        We now need to authenticate the usage of each of our transaction inputs, i.e prove that\n        we own the funds that we are trying to access.\n      </p>\n      <p>\n        For each transaction input, enter the private key for each bitcoin address that corresponds.\n        Press the \"Unlock\" button to authenticate the transaction input. Once unlocked, you can press\n        the lock icon to unauthenticate.\n      </p>\n    </div>\n  );\n  const page2 = (\n    <div>\n      <p>\n        The private key has been filled out for you.\n        Please click the \"Unlock\" button and click \"Next\" on the bottom right to continue.\n      </p>\n    </div>\n  );\n  return [\n    {\n      title: 'Authentication',\n      page: page1,\n    },\n    {\n      title: 'Tutorial',\n      page: page2,\n    }\n  ];\n}\n\nfunction FeesFrame () {\n  const page1 = (\n    <div>\n      <p>\n        The last step is to set the amount of change that you wish to recieve.\n      </p>\n      <p>\n        The fee is calculated as the collected input minus the spent output. Therefore\n        anything that you don't spend is used as fee to process your transaction.\n        We circumvent this and simulate the idea of \"change\", by sending money back to ourself.\n      </p>\n    </div>\n  );\n  const page2 = (\n    <div>\n      <Image src={returnAddressIMG} fluid/>\n      <p style={{wordBreak: 'break-word', marginTop: '1rem'}}>\n        Use the above dropdown to set which return address you wish to use for change,\n        or input an unlisted address. Alternatively you can leave the return address unset.\n        However, no change will be processed and all unspent inputs will be\n        used in the fee.\n      </p>\n    </div>\n  );\n  const page3 = (\n    <div>\n      <Image src={feeIMG} fluid/>\n      <p style={{wordBreak: 'break-word', marginTop: '1rem'}}>\n        Here we can see the total fee, the fee rate and the transaction size. The higher the\n        fee rate, the quicker your transaction will be processed. However,\n        conversely this means that if your fee rate is too low, then your transaction may\n        end up <b>never</b> being processed.\n      </p>\n      <p>\n        Use the input provided to fine tune the fee rate. It may be\n        beneficial to use an online service to check what the standard fee rate is for your\n        chosen network.\n      </p>\n    </div>\n  );\n  const page4 = (\n    <div>\n      <p>\n        The return address has been decided for you. Click on the drop down and select the\n        return address for confirmation. Tune the fee rate however you wish.\n        Then, click \"Next\" on the bottom right to continue.\n      </p>\n    </div>\n  );\n  return [\n    {\n      title: 'Fees',\n      page: page1,\n    },\n    {\n      title: 'Set Return Address',\n      page: page2,\n    },\n    {\n      title: 'Set Fee Rate',\n      page: page3,\n    },\n    {\n      title: 'Tutorial',\n      page: page4,\n    },\n  ];\n}\n\nfunction TransactionFrame () {\n  const page1 = (\n    <div>\n      <Image src={transactionLogIMG} fluid/>\n      <p style={{wordBreak: 'break-word', marginTop: '1rem'}}>\n        And That's all. You have created the transaction.\n      </p>\n      <p>\n        The sequence of numbers at the top shows your raw signed transaction. This contains all the data\n        regarding your transaction. It is also used to create the \"transaction hash\" as seen\n        previously.\n      </p>\n      <p>\n        The breakdown below show section by section all the steps that was required to create the\n        transaction.\n      </p>\n    </div>\n  );\n  const page2 = (\n    <div>\n      <p>\n        <h5>Version Code</h5>\n        This software creates only version 1 transactions.\n      </p>\n      <p>\n        <h5>Input Count</h5>\n        This defines how many inputs are used in the transaction.\n      </p>\n      <p>\n        <h5>Inputs</h5>\n        Each input is then defined.\n      </p>\n      <p>\n        <h5>Output Count</h5>\n        This defines how many outputs are used in the transaction.\n      </p>\n      <p>\n        <h5>Outputs</h5>\n        Each output is then defined.\n      </p>\n      <p>\n        <h5>Locktime</h5>\n        This defines a restriction on when a transaction can be processed based on either\n        block height or unix epoch. This software does not support variable locktime.\n      </p>\n      {/* <p>\n        <h5>Hash Code</h5>\n        TODO\n      </p> */}\n      <p>\n        <h5>Signing The Inputs</h5>\n        Finally, the inputs are signed based on the constructed raw unsigned transaction.\n        The raw unsigned transaction refers to the transaction that has undergone all the\n        previous steps but has yet to prove ownership of the funds it is trying to access.\n        To sign the transaction, we compute the necessary signatures and then replaces the\n        original input scripts with their respective signature.\n      </p>\n    </div>\n  );\n  const page3 = (\n    <div>\n      <Image src={transactionStateIMG} fluid/>\n      <p style={{wordBreak: 'break-word', marginTop: '1rem'}}>\n        The section titles can be expanded to show the state of the raw transaction after each computational block.\n        In this view, the transaction state is broken down respectively to show what each substring of the\n        transaction represents.\n      </p>\n    </div>\n  );\n  const page4 = (\n    <div>\n      <Image src={publishIMG} fluid/>\n      <p style={{wordBreak: 'break-word', marginTop: '1rem'}}>\n        Now that you have created your transaction, click the \"Publish\" button on the bottom\n        right if you wish submit the transaction. Otherwise don't. No transfer of balance will\n        be enacted, and you can simply marvel at the transaction that you created.\n      </p>\n    </div>\n  );\n  return [\n    {\n      title: 'Transaction Breakdown',\n      page: page1,\n    },\n    {\n      title: 'Breakdown Sections',\n      page: page2,\n    },\n    {\n      title: 'Show Transaction State',\n      page: page3,\n    },\n    {\n      title: 'Publish Transaction',\n      page: page4,\n    },\n  ];\n}\n\nclass HelpModal extends Component {\n  constructor (props) {\n    super(props);\n    const pages = this.getPages();\n    this.state = {\n      pages,\n      activePage: 1,\n      totalPages: pages.length,\n    }\n  }\n\n  handlePaginationChange = (e, { activePage, totalPages }) => {\n    if (activePage > 0 && activePage <= totalPages) {\n      this.setState({ activePage })\n    }\n  }\n\n  getPages = () => {\n    switch (this.props.frame) {\n      case 'contribution':\n        return ContributionFrameHelp();\n      case 'payment':\n        return PaymentFrameHelp();\n      case 'signing':\n        return SigningFrame();\n      case 'fees':\n        return FeesFrame();\n      case 'transaction':\n        return TransactionFrame();\n      default:\n        return [];\n    }\n  }\n\n  render () {\n    return (\n      <Modal open={this.props.open}\n             onOpen={this.props.handleOpen}\n             onClose={this.props.handleClose}\n             size='tiny'\n             closeIcon>\n        <Modal.Header>{this.state.pages[this.state.activePage - 1].title}</Modal.Header>\n        <Modal.Content scrolling>\n          <Modal.Description>\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', overflow: 'auto'}}>\n              <div style={{marginBottom:'1rem'}}>\n                {this.state.pages[this.state.activePage - 1].page}\n              </div>\n            </div>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <div style={{display:'flex', justifyContent:'center'}}>\n            <Pagination activePage={this.state.activePage}\n              prevItem={{ content: <Icon name='angle left' />, icon: true }}\n              nextItem={{ content: <Icon name='angle right' />, icon: true }}\n              firstItem={null}\n              lastItem={null}\n              pointing\n              secondary\n              onPageChange={this.handlePaginationChange}\n              totalPages={this.state.totalPages}/>\n          </div>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default HelpModal;\n","import React, { Component } from 'react';\nimport { Button, Dimmer, Loader } from 'semantic-ui-react';\nimport { transaction, utils } from 'easy_btc';\nimport StartingFrame from './starting_frame';\nimport ContributionFrame from './contribution_frame';\nimport PaymentFrame from './payment_frame';\nimport ErrorFrame from './error_frame';\nimport FeesFrame from './fees_frame';\nimport TransactionFrame from './transaction_frame';\nimport SigningFrame from './signing_frame';\nimport { OperationResult } from '../util';\nimport ErrorModal from './error_modal';\nimport SubmissionModal from './submission_modal';\nimport HelpModal from './help_modal';\n\nconst startingFrameMeta = {\n  value: 'starting',\n  order: 0,\n};\nconst contributionFrameMeta = {\n  value: 'contribution',\n  order: 1,\n};\nconst paymentFrameMeta = {\n  value: 'payment',\n  order: 2,\n};\nconst signingFrameMeta = {\n  value: 'signing',\n  order: 3,\n};\nconst feesFrameMeta = {\n  value: 'fees',\n  order: 4,\n};\nconst transactionFrameMeta = {\n  value: 'transaction',\n  order: 5,\n};\nconst navLookup = [\n  startingFrameMeta,\n  contributionFrameMeta,\n  paymentFrameMeta,\n  signingFrameMeta,\n  feesFrameMeta,\n  transactionFrameMeta,\n];\n\nclass CenterFrame extends Component {\n  constructor(props) {\n    super(props);\n    this.state = CenterFrame.defaultState;\n  }\n\n  static get defaultState() {\n    return {\n      // Page controller\n      frame: startingFrameMeta,\n      // Transactions for transaction inputs\n      txs: [],\n      // Transactoin Outputs\n      payments: [],\n      privKeys: {},\n      // The created transaction\n      modTx: null,\n      // Message of transaction submission\n      publishMessage: '',\n      // Result of transaction submission\n      publishResult: '',\n      loading: false,\n      // Currency type\n      currency: 'Satoshi',\n      // Modal visibility\n      modalOpen: false,\n      // Bitcoin network type: testnet|mainnet\n      network: null,\n      error: false,\n      errorMessage: '',\n      // Return payment for change calculation\n      returnPayment: null,\n      // Tutorial mode activation\n      tutorial: false,\n      // Tutorial modal visibility\n      showhelp: false,\n    };\n  }\n\n  reset = () => {\n    this.setState(CenterFrame.defaultState);\n  }\n\n  handleOpenModal = () => {\n    this.setState({ modalOpen: true });\n  }\n\n  handleCloseModal = () => {\n    this.setState({\n      modalOpen: false,\n      error: false,\n      showhelp: false,\n    });\n  }\n\n  addTransactions = (txs) => {\n    const transactions = Array.isArray(txs) ? txs : [txs];\n    const validation = this.checkDuplicateTransactions(transactions);\n    if (!validation.success) {\n      return validation;\n    }\n    let stateTxs = this.state.txs.slice(0);\n    stateTxs = [...stateTxs, ...transactions];\n    this.setState({ txs: stateTxs });\n    return new OperationResult(true);\n  }\n\n  checkDuplicateTransactions = (txs) => {\n    const transactions = Array.isArray(txs) ? txs : [txs];\n    const stateTxs = this.state.txs;\n    let result = new OperationResult(true);\n\n    nestedLoops: for (let i = 0; i < transactions.length; i += 1) {\n      const transaction = transactions[i];\n      for (let j = 0; j < stateTxs.length; j += 1) {\n        const tx = stateTxs[j];\n        if (transaction.txHash === tx.txHash && Object.keys(transaction.outputs)[0] === Object.keys(tx.outputs)[0]) {\n          // TODO Object keys implementation above assumes single output transaction\n          result = new OperationResult(\n            false,\n            new Error(`${tx.txHash}:${Object.keys(tx.outputs)[0]} already exists. Please remove the transaction and try again.`),\n          );\n          break nestedLoops;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  removeTransaction = (txHash, outputIndex) => {\n    const txs = this.state.txs.slice(0);\n    const txIndex = txs.findIndex(tx => tx.txHash === txHash && Object.keys(tx.outputs)[0] === outputIndex);\n    txs.splice(txIndex, 1);\n    this.setState({ txs });\n    this.removePrivateKey(`${txHash}:${outputIndex}`);\n  }\n\n  removePayment = (address, amount) => {\n    const payments = this.state.payments.slice(0);\n    const paymentIndex = payments.findIndex(element => element.to === address && element.amount === amount);\n    payments.splice(paymentIndex, 1);\n    this.setState({ payments });\n  }\n\n  appendToPayments = (payment) => {\n    if (this.calculateBalance() - payment.amount < 0) {\n      return new OperationResult(false, new Error('Insufficient funds.'));\n    }\n    const payments = this.state.payments.slice(0);\n    payments.push(payment);\n    this.setState({ payments });\n    return new OperationResult(true);\n  }\n\n  appendToPrivateKeys = (address, priv) => {\n    const { privKeys } = this.state;\n    privKeys[address] = priv;\n    this.setState({ privKeys });\n  }\n\n  removePrivateKey = (address) => {\n    const { privKeys } = this.state;\n    delete privKeys[address];\n    this.setState({ privKeys });\n  }\n\n  getAddressesFromPrivs = (addresses) => {\n    const addressesCopy = addresses ? addresses.slice(0) : [];\n    Object.keys(this.state.privKeys).forEach((key) => {\n      const priv = this.state.privKeys[key];\n      const address = utils.privToAddress(priv, this.state.network);\n      if (!addressesCopy.includes(address)) {\n        addressesCopy.push(address);\n      }\n    });\n    return addressesCopy;\n  }\n\n  getAddressesFromPayments = (addresses) => {\n    const addressesCopy = addresses ? addresses.slice(0) : [];\n    this.state.payments.forEach((payment) => {\n      if (!addressesCopy.includes(payment.to)) {\n        addressesCopy.push(payment.to);\n      }\n    });\n    return addressesCopy;\n  }\n\n  getAllAddresses = () => {\n    const addresses = this.getAddressesFromPrivs();\n    return this.getAddressesFromPayments(addresses);\n  }\n\n  setCurrency = (currency) => {\n    this.setState({ currency });\n  }\n\n  setReturnPayment = (returnPayment) => {\n    this.setState({ returnPayment });\n  }\n\n  validate = () => {\n    switch (this.state.frame.value) {\n      case 'starting':\n        return new OperationResult(true);\n      case 'contribution':\n        if (this.state.txs.length) {\n          return new OperationResult(true);\n        }\n        return new OperationResult(false, new Error('Please add at least one contribution to continue.'));\n      case 'payment':\n        if (this.state.payments.length) {\n          return new OperationResult(true);\n        }\n        return new OperationResult(false, new Error('Please add at least one payment to continue.'));\n      case 'signing':\n        if (this.validatePrivKeys()) {\n          return new OperationResult(true);\n        }\n        return new OperationResult(false, new Error('Please ensure that you have unlocked each of the transactions.'));\n      case 'fees':\n        if (this.validatePrivKeys()) {\n          return new OperationResult(true);\n        }\n        return new OperationResult(false, new Error('Please ensure that you have unlocked each of the transactions.'));\n      case 'transaction':\n        return new OperationResult(false);\n      default:\n        return new OperationResult(false);\n    }\n  }\n\n  calculateBalance = () => {\n    const totalContributionValue = this.contributions.reduce((sum, a) => sum + Number(a.output.balance), 0);\n\n    const totalPaymentValue = this.state.payments.reduce((sum, payment) => sum + Number(payment.amount), 0);\n\n    return totalContributionValue - totalPaymentValue;\n  }\n\n  getPrivKeyArgs = () => {\n    const privKeysArg = [];\n    let isValid = true;\n    this.contributions.forEach((contribution) => {\n      const priv = this.state.privKeys[`${contribution.txHash}:${contribution.output.outputIndex}`];\n      if (priv) {\n        privKeysArg.push(priv);\n        return;\n      }\n      isValid = false;\n    });\n    if (isValid) {\n      return privKeysArg;\n    }\n    // todo this is really bad\n    return isValid;\n  }\n\n  get modTransaction() {\n    const privKeysArg = this.getPrivKeyArgs();\n\n    const payments = this.state.payments.slice(0);\n    if (this.state.returnPayment) {\n      payments.push(this.state.returnPayment);\n    }\n    const modTx = transaction.createSignedTransaction(this.contributions, payments, privKeysArg);\n    return modTx;\n  }\n\n  validatePrivKeys = () => {\n    // TODO not ideal validation\n    const privs = this.getPrivKeyArgs();\n    if (!privs) {\n      return false;\n    }\n    this.setState({ modTx: this.modTransaction });\n    return true;\n  }\n\n  get contributions() {\n    let contributions = [];\n    this.state.txs.forEach((tx) => {\n      contributions = contributions.concat(tx.getContributions());\n    });\n    return contributions;\n  }\n\n  get frame() {\n    switch (this.state.frame.value) {\n      case 'starting':\n        return (<StartingFrame callback={this.setTransactionMode} />);\n      case 'contribution':\n        return (\n          <ContributionFrame\n            addTransactions={this.addTransactions}\n            removeTransaction={this.removeTransaction}\n            contributions={this.contributions}\n            currency={this.state.currency}\n            balance={this.calculateBalance()}\n            setCurrency={this.setCurrency}\n            tutorial={this.state.tutorial}\n            network={this.state.network}\n          />\n        );\n      case 'payment':\n        return (\n          <PaymentFrame\n            callback={this.appendToPayments}\n            payments={this.state.payments}\n            balance={this.calculateBalance()}\n            removePayment={this.removePayment}\n            currency={this.state.currency}\n            setCurrency={this.setCurrency}\n            network={this.state.network}\n            tutorial={this.state.tutorial}\n          />\n        );\n      case 'signing':\n      // TODO this should probably be passing around contributions, not transactions\n        return (\n          <SigningFrame\n            transactions={this.state.txs}\n            addPrivateKey={this.appendToPrivateKeys}\n            removePrivateKey={this.removePrivateKey}\n            privKeys={this.state.privKeys}\n            tutorial={this.state.tutorial}\n          />\n        );\n      case 'fees':\n        return (\n          <FeesFrame\n            addresses={this.getAllAddresses()}\n            contributions={this.contributions}\n            payments={this.state.payments}\n            privKeysArg={this.getPrivKeyArgs()}\n            balance={this.calculateBalance()}\n            network={this.state.network}\n            tutorial={this.state.tutorial}\n            currency={this.state.currency}\n            setCurrency={this.setCurrency}\n            setReturnPayment={this.setReturnPayment}\n            returnPayment={this.state.returnPayment}\n          />\n        );\n      case 'transaction':\n        return (\n          <TransactionFrame\n            contributions={this.contributions}\n            payments={this.state.payments}\n            transaction={this.state.modTx}\n          />\n        );\n      default:\n        return <ErrorFrame />;\n    }\n  }\n\n  get navigationButtons() {\n    const nextNavButton = (\n      <Button\n        key=\"next\"\n        style={{ float: 'right', margin: 0 }}\n        content=\"Next\"\n        value=\"next\"\n        icon=\"right arrow\"\n        labelPosition=\"right\"\n        onClick={this.handleClick}\n      />\n    );\n    const backNavButton = (\n      <Button\n        key=\"back\"\n        style={{ float: 'left', margin: 0 }}\n        content=\"Back\"\n        value=\"back\"\n        icon=\"left arrow\"\n        labelPosition=\"left\"\n        onClick={this.handleClick}\n      />\n    );\n    const buttons = [];\n    switch (this.state.frame.value) {\n      case 'starting':\n        break;\n      case 'contribution':\n        buttons.push(nextNavButton);\n        buttons.push(backNavButton);\n        break;\n      case 'payment':\n        buttons.push(nextNavButton);\n        buttons.push(backNavButton);\n        break;\n      case 'signing':\n        buttons.push(nextNavButton);\n        buttons.push(backNavButton);\n        break;\n      case 'fees':\n        buttons.push(nextNavButton);\n        buttons.push(backNavButton);\n        break;\n      case 'transaction': {\n        const publishButton = (\n          <Button\n            key=\"publish\"\n            style={{ float: 'right', margin: 0 }}\n            content=\"Publish Transaction\"\n            value=\"publish\"\n            icon=\"right arrow\"\n            labelPosition=\"right\"\n            onClick={this.publish}\n          />\n        );\n        buttons.push(publishButton);\n        buttons.push(backNavButton);\n        break;\n      }\n      default:\n        return <ErrorFrame />;\n    }\n    return buttons;\n  }\n\n  handleNavigation = (direction, showModal) => {\n    if (direction === 'back' && this.state.frame === contributionFrameMeta) {\n      this.reset();\n    } else {\n      if (direction === 'next') {\n        const validationResult = this.validate();\n        if (!validationResult.success) {\n          this.setState({\n            error: true,\n            errorMessage: validationResult.error.message,\n            modalOpen: true,\n          });\n          return;\n        }\n      }\n\n      const directionValue = direction === 'next' ? 1 : -1;\n      const frame = navLookup[this.state.frame.order + directionValue];\n      // TODO this way of show modal might not be ideal\n      const showhelp = !!(this.state.tutorial || showModal);\n      const modalOpen = showhelp;\n      this.setState({\n        frame,\n        showhelp,\n        modalOpen,\n      });\n    }\n  }\n\n  handleClick = (e, { value }) => {\n    this.handleNavigation(value);\n  }\n\n  setTransactionMode = (mode) => {\n    switch (mode) {\n      case 'mainnet':\n        this.setState({ network: mode });\n        break;\n      case 'testnet':\n        this.setState({ network: mode });\n        break;\n      case 'tutorial':\n        this.setState({\n          network: 'testnet',\n          tutorial: true,\n        });\n        return this.handleNavigation('next', true);\n      default:\n        alert('error');\n        return false;\n    }\n    // TODO make sure that every return is bool\n    return this.handleNavigation('next');\n  }\n\n  publish = () => {\n    if (this.state.tutorial) {\n      this.setState({ modalOpen: true, publishResult: 'Succeeded' });\n    } else {\n      this.setState({ loading: true });\n      this.state.modTx.pushtx(this.state.network)\n        .then((response) => {\n          this.setState({\n            loading: false, publishMessage: response.data, modalOpen: true, publishResult: 'Succeeded',\n          });\n        }).catch((error) => {\n          this.setState({\n            loading: false, publishMessage: error.message, modalOpen: true, publishResult: 'Failed',\n          });\n        });\n    }\n  }\n\n  get modal() {\n    if (this.state.error) {\n      return (\n        <ErrorModal\n          message={this.state.errorMessage}\n          open={this.state.modalOpen}\n          handleOpen={this.handleOpenModal}\n          handleClose={this.handleCloseModal}\n        />\n      );\n    } if (this.state.showhelp) {\n      return (\n        <HelpModal\n          open={this.state.modalOpen}\n          handleOpen={this.handleOpenModal}\n          handleClose={this.handleCloseModal}\n          frame={this.state.frame.value}\n        />\n      );\n    }\n    return (\n      <SubmissionModal\n        message={this.state.publishMessage}\n        open={this.state.modalOpen}\n        handleOpen={this.handleOpenModal}\n        handleClose={this.handleCloseModal}\n        result={this.state.publishResult}\n        tutorial={this.state.tutorial}\n        reset={this.reset}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div style={{\n        height: '100%', width: '100%', display: 'flex', flexDirection: 'column',\n      }}\n      >\n        <Dimmer active={this.state.loading}>\n          <Loader />\n        </Dimmer>\n        {this.modal}\n        {this.frame}\n        <div style={{ margin: '0.5rem' }}>\n          {this.navigationButtons}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CenterFrame;\n","import React, { Component } from 'react';\nimport CenterFrame from './frames/center_frame';\n\nconst style = {\n  width: '100%',\n  height: '100%',\n  padding: '0.5rem',\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" style={style}>\n        <CenterFrame />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const darkPurple = '#100C19';\nconst lightPurple = '#44404E';\nconst lighterPurple = '#756e87';\nconst red = '#ED4141';\nconst gold = '#FFE438';\nconst lightLime = '#C6F0C6';\nconst lime = '#9CE09C';\nconst darkLime = '#71CC71';\nconst lightPink = '#C24678';\nconst darkPink = '#AA4E73';\n\nmodule.exports = {\n  darkPurple,\n  lightPurple,\n  lighterPurple,\n  red,\n  gold,\n  lightLime,\n  lime,\n  darkLime,\n  lightPink,\n  darkPink,\n};\n"],"sourceRoot":""}